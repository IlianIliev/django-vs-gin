// Code generated by MockGen. DO NOT EDIT.
// Source: group.go
//
// Generated by this command:
//
//	mockgen -source=group.go -package=services -destination=group_mock.go
//
// Package services is a generated GoMock package.
package services

import (
	reflect "reflect"

	entities "github.com/ilianiliev/django-vs-gin/gin/pkg/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockGroup is a mock of Group interface.
type MockGroup struct {
	ctrl     *gomock.Controller
	recorder *MockGroupMockRecorder
}

// MockGroupMockRecorder is the mock recorder for MockGroup.
type MockGroupMockRecorder struct {
	mock *MockGroup
}

// NewMockGroup creates a new mock instance.
func NewMockGroup(ctrl *gomock.Controller) *MockGroup {
	mock := &MockGroup{ctrl: ctrl}
	mock.recorder = &MockGroupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroup) EXPECT() *MockGroupMockRecorder {
	return m.recorder
}

// AddMember mocks base method.
func (m *MockGroup) AddMember(member entities.Member) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMember", member)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddMember indicates an expected call of AddMember.
func (mr *MockGroupMockRecorder) AddMember(member any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMember", reflect.TypeOf((*MockGroup)(nil).AddMember), member)
}

// GetMember mocks base method.
func (m *MockGroup) GetMember(name string) (entities.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMember", name)
	ret0, _ := ret[0].(entities.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMember indicates an expected call of GetMember.
func (mr *MockGroupMockRecorder) GetMember(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMember", reflect.TypeOf((*MockGroup)(nil).GetMember), name)
}

// ListMembers mocks base method.
func (m *MockGroup) ListMembers() ([]entities.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMembers")
	ret0, _ := ret[0].([]entities.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMembers indicates an expected call of ListMembers.
func (mr *MockGroupMockRecorder) ListMembers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMembers", reflect.TypeOf((*MockGroup)(nil).ListMembers))
}
